openapi: 3.0.1
info:
  contact:
    email: contato@vertigo.com.br
    name: Suporte
    url: https://vertigo.com.br
  description: Vertigo API Employees
  title: API Employees
  version: 0.0.3
servers:
- url: /
tags:
- description: Especificações sobre os Employees
  name: Employees
- description: Dados resumidos de um Employee
  name: Employee Summary
- description: Dados consumidos da API Super Hero
  name: Super Hero
- description: Dados consumidos do microserviço SOAP dos Correios
  name: Consulta Cep
paths:
  /employee:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employees'
          description: Ok
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Erro interno no servidor
      summary: Busca todos os Employees
      tags:
      - Employees
      x-accepts: application/json
      x-tags:
      - tag: Employees
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCadastravel'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: Cliente cadastrado com sucesso
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Erro interno no servidor
      summary: Cadastra um novo Employee
      tags:
      - Employees
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: Employees
  /employee/{employee_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: employee_id
        required: true
        schema:
          example: 123
          maximum: 99999
          type: integer
        style: simple
      responses:
        "204": {}
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Employee não encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Erro interno no servidor
      summary: Deleta um Employee pelo id
      tags:
      - Employees
      x-accepts: application/json
      x-tags:
      - tag: Employees
    get:
      parameters:
      - explode: false
        in: path
        name: employee_id
        required: true
        schema:
          example: 123
          maximum: 99999
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: Ok
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Employee não encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Erro interno no servidor
      summary: Busca um Employee por id
      tags:
      - Employees
      x-accepts: application/json
      x-tags:
      - tag: Employees
    patch:
      parameters:
      - explode: false
        in: path
        name: employee_id
        required: true
        schema:
          example: 123
          maximum: 99999
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectEmployee'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Employee não encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Erro interno no servidor
      summary: Atualiza um Employee pelo id
      tags:
      - Employees
      x-contentType: application/json
      x-accepts: application/json
      x-tags:
      - tag: Employees
  /employee/{employee_id}/summary:
    get:
      parameters:
      - explode: false
        in: path
        name: employee_id
        required: true
        schema:
          example: 123
          maximum: 99999
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSummary'
          description: Ok
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Employee não encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Erro interno no servidor
      summary: Busca um Employee resumido por id
      tags:
      - Employee Summary
      x-accepts: application/json
      x-tags:
      - tag: Employee Summary
  /heros:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperHeros'
          description: Ok
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Erro interno no servidor
      summary: Busca todos os Heros da API externa
      tags:
      - Super Hero
      x-accepts: application/json
      x-tags:
      - tag: Super Hero
  /consultacep/{cep}:
    get:
      parameters:
      - explode: false
        in: path
        name: cep
        required: true
        schema:
          maxLength: 9
          minLength: 8
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cep'
          description: Ok
      summary: Busca um cep no ms SOAP dos correios
      tags:
      - Consulta Cep
      x-accepts: application/json
      x-tags:
      - tag: Consulta Cep
components:
  schemas:
    Employee:
      $ref: '#/components/schemas/ObjectEmployee'
    Employees:
      items:
        $ref: '#/components/schemas/Employee'
      type: array
    EmployeeCadastravel:
      example:
        firstName: Andre
        lastName: Almeida
        employeeType: Estg
        jobTitle: Estagiario
        department: Delivery
        startDate: 2022-02-02T00:00:00.000+0000
        email: email@email.com.br
        status: Ativo
      properties:
        firstName:
          example: Andre
          maxLength: 45
          minLength: 1
          type: string
        lastName:
          example: Almeida
          maxLength: 45
          minLength: 1
          type: string
        department:
          example: Delivery
          maxLength: 45
          minLength: 1
          type: string
        jobTitle:
          example: Estagiario
          maxLength: 45
          minLength: 1
          type: string
        employeeType:
          example: Estg
          maxLength: 45
          minLength: 1
          type: string
        startDate:
          example: 2022-02-02
          format: date
          type: string
        status:
          example: Ativo
          maxLength: 45
          minLength: 1
          type: string
        email:
          example: email@email.com.br
          maxLength: 45
          minLength: 1
          type: string
      required:
      - department
      - email
      - employeeType
      - firstName
      - jobTitle
      - lastName
      - startDate
      - status
      type: object
    ObjectEmployee:
      example:
        firstName: Andre
        lastName: Almeida
        employeeType: Estg
        jobTitle: Estagiario
        department: Delivery
        startDate: 2022-02-02T00:00:00.000+0000
        email: email@email.com.br
        status: Ativo
      properties:
        firstName:
          example: Andre
          maxLength: 45
          minLength: 1
          type: string
        lastName:
          example: Almeida
          maxLength: 45
          minLength: 1
          type: string
        department:
          example: Delivery
          maxLength: 45
          minLength: 1
          type: string
        jobTitle:
          example: Estagiario
          maxLength: 45
          minLength: 1
          type: string
        employeeType:
          example: Estg
          maxLength: 45
          minLength: 1
          type: string
        startDate:
          example: 2022-02-02
          format: date
          type: string
        status:
          example: Ativo
          maxLength: 45
          minLength: 1
          type: string
        email:
          example: email@email.com.br
          maxLength: 45
          minLength: 1
          type: string
      type: object
    EmployeeSummary:
      example:
        firstName: Andre
        lastName: Almeida
      properties:
        firstName:
          example: Andre
          maxLength: 45
          minLength: 1
          type: string
        lastName:
          example: Almeida
          maxLength: 45
          minLength: 1
          type: string
      type: object
    ErrorModel:
      properties:
        timestamp:
          example: 2022-06-10 12:35:56
          type: string
        status:
          example: status error message
          type: string
        message:
          example: error message
          type: string
        from:
          example: employee-api
          type: string
      type: object
    SuperHeros:
      example:
        caracteristica: Lorem Ipsum is simply dummy text of the printing
        nomeVerdadeiro: Superman
      properties:
        nomeVerdadeiro:
          example: Superman
          maxLength: 45
          minLength: 1
          type: string
        caracteristica:
          example: Lorem Ipsum is simply dummy text of the printing
          maxLength: 255
          minLength: 1
          type: string
      type: object
    Cep:
      example:
        cidade: Cidade
        complemento: Complemento
        endereco: Endereco
        bairro: Bairro
        cep: 11111-111
      properties:
        bairro:
          example: Bairro
          type: string
        cep:
          example: 11111-111
          type: string
        cidade:
          example: Cidade
          type: string
        complemento:
          example: Complemento
          type: string
        endereco:
          example: Endereco
          type: string
      type: object
